// <auto-generated />
using System;
using BusTransport.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusTransport.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231106213946_addedCourseDriverOneToOneRealtion")]
    partial class addedCourseDriverOneToOneRealtion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusTransport.Model.Models.Bus", b =>
                {
                    b.Property<int>("Bus_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Bus_Id"));

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("int");

                    b.Property<string>("VehicleBrand")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Bus_Id");

                    b.ToTable("Buses");
                });

            modelBuilder.Entity("BusTransport.Model.Models.BusStop", b =>
                {
                    b.Property<int>("BusStop_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusStop_Id"));

                    b.Property<string>("StopName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BusStop_Id");

                    b.ToTable("BusStops");
                });

            modelBuilder.Entity("BusTransport.Model.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("BusTransport.Model.Models.Driver", b =>
                {
                    b.Property<int>("Driver_Id")
                        .HasColumnType("int");

                    b.Property<string>("LicenseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoginPIN")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Driver_Id");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("BusTransport.Model.Models.Passenger", b =>
                {
                    b.Property<int>("Passenger_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Passenger_Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Passenger_Id");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("BusTransport.Model.Models.Route", b =>
                {
                    b.Property<int>("Route_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Route_Id"));

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RouteCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Route_Id");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("BusTransport.Model.Models.Ticket", b =>
                {
                    b.Property<int>("Ticket_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ticket_Id"));

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("TicketPrice")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Ticket_Id");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("BusTransport.Model.Models.Driver", b =>
                {
                    b.HasOne("BusTransport.Model.Models.Course", "Course")
                        .WithOne("Driver")
                        .HasForeignKey("BusTransport.Model.Models.Driver", "Driver_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("BusTransport.Model.Models.Course", b =>
                {
                    b.Navigation("Driver");
                });
#pragma warning restore 612, 618
        }
    }
}
