// <auto-generated />
using System;
using BusTransport.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusTransport.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusTransport.Model.Models.Bus", b =>
                {
                    b.Property<int>("Bus_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Bus_Id"));

                    b.Property<double>("BusLocationX")
                        .HasColumnType("float");

                    b.Property<double>("BusLocationY")
                        .HasColumnType("float");

                    b.Property<bool>("IsOnRoad")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("int");

                    b.Property<string>("VehicleBrand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Bus_Id");

                    b.ToTable("Buses");
                });

            modelBuilder.Entity("BusTransport.Model.Models.BusStop", b =>
                {
                    b.Property<int>("BusStop_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusStop_Id"));

                    b.Property<double>("BusStopLocationX")
                        .HasColumnType("float");

                    b.Property<double>("BusStopLocationY")
                        .HasColumnType("float");

                    b.Property<string>("StopName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BusStop_Id");

                    b.ToTable("BusStops");

                    b.HasData(
                        new
                        {
                            BusStop_Id = 1,
                            BusStopLocationX = 0.0,
                            BusStopLocationY = 0.0,
                            StopName = "Owsianka"
                        },
                        new
                        {
                            BusStop_Id = 2,
                            BusStopLocationX = 0.0,
                            BusStopLocationY = 0.0,
                            StopName = "Rosochatka"
                        },
                        new
                        {
                            BusStop_Id = 3,
                            BusStopLocationX = 0.0,
                            BusStopLocationY = 0.0,
                            StopName = "Samoklęski-Kolonia Pierwsza"
                        },
                        new
                        {
                            BusStop_Id = 4,
                            BusStopLocationX = 0.0,
                            BusStopLocationY = 0.0,
                            StopName = "Rozpłucie Pierwsze"
                        },
                        new
                        {
                            BusStop_Id = 6,
                            BusStopLocationX = 0.0,
                            BusStopLocationY = 0.0,
                            StopName = "Niedźwiada Duża"
                        },
                        new
                        {
                            BusStop_Id = 7,
                            BusStopLocationX = 0.0,
                            BusStopLocationY = 0.0,
                            StopName = "Przeginia Duchowna"
                        },
                        new
                        {
                            BusStop_Id = 8,
                            BusStopLocationX = 0.0,
                            BusStopLocationY = 0.0,
                            StopName = "Swędzieniejewice"
                        },
                        new
                        {
                            BusStop_Id = 9,
                            BusStopLocationX = 0.0,
                            BusStopLocationY = 0.0,
                            StopName = "Jeże"
                        },
                        new
                        {
                            BusStop_Id = 10,
                            BusStopLocationX = 0.0,
                            BusStopLocationY = 0.0,
                            StopName = "Pędziwiatry"
                        },
                        new
                        {
                            BusStop_Id = 11,
                            BusStopLocationX = 0.0,
                            BusStopLocationY = 0.0,
                            StopName = "Stare Pieścirogi"
                        },
                        new
                        {
                            BusStop_Id = 12,
                            BusStopLocationX = 0.0,
                            BusStopLocationY = 0.0,
                            StopName = "Grabce-Towarzystwo"
                        },
                        new
                        {
                            BusStop_Id = 13,
                            BusStopLocationX = 0.0,
                            BusStopLocationY = 0.0,
                            StopName = "Przedmieście Szczebrzeszyńskie"
                        },
                        new
                        {
                            BusStop_Id = 14,
                            BusStopLocationX = 0.0,
                            BusStopLocationY = 0.0,
                            StopName = "Sobienie Kiełczewskie Pierwsze"
                        },
                        new
                        {
                            BusStop_Id = 15,
                            BusStopLocationX = 0.0,
                            BusStopLocationY = 0.0,
                            StopName = "Stare Leśne Bohatery"
                        },
                        new
                        {
                            BusStop_Id = 16,
                            BusStopLocationX = 0.0,
                            BusStopLocationY = 0.0,
                            StopName = "Warszawa"
                        },
                        new
                        {
                            BusStop_Id = 17,
                            BusStopLocationX = 0.0,
                            BusStopLocationY = 0.0,
                            StopName = "Kętrzyn"
                        });
                });

            modelBuilder.Entity("BusTransport.Model.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("BusTransport.Model.Models.Discount", b =>
                {
                    b.Property<int>("Discount_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Discount_Id"));

                    b.Property<string>("DiscountName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<float>("DiscountValue")
                        .HasColumnType("real");

                    b.HasKey("Discount_Id");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            Discount_Id = 1,
                            DiscountName = "Bez zniżki",
                            DiscountValue = 1f
                        },
                        new
                        {
                            Discount_Id = 2,
                            DiscountName = "Student 40%",
                            DiscountValue = 0.6f
                        },
                        new
                        {
                            Discount_Id = 3,
                            DiscountName = "Uczeń 55%",
                            DiscountValue = 0.45f
                        },
                        new
                        {
                            Discount_Id = 4,
                            DiscountName = "Emeryt 60%",
                            DiscountValue = 0.4f
                        },
                        new
                        {
                            Discount_Id = 5,
                            DiscountName = "Poseł 100%",
                            DiscountValue = 0f
                        });
                });

            modelBuilder.Entity("BusTransport.Model.Models.Driver", b =>
                {
                    b.Property<int>("Driver_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Driver_Id"));

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoginPIN")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Driver_Id");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("BusTransport.Model.Models.Passenger", b =>
                {
                    b.Property<int>("Passenger_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Passenger_Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Passenger_Id");

                    b.ToTable("Passengers");

                    b.HasData(
                        new
                        {
                            Passenger_Id = 1,
                            Age = 31,
                            Email = "JanKofalski@gmail.com",
                            Name = "Jan",
                            Password = "test",
                            Surname = "Kowalski"
                        },
                        new
                        {
                            Passenger_Id = 2,
                            Age = 69,
                            Email = "JanKofalski222@gmail.com",
                            Name = "Jan2",
                            Password = "test",
                            Surname = "Kowalski2"
                        });
                });

            modelBuilder.Entity("BusTransport.Model.Models.Report", b =>
                {
                    b.Property<int>("Report_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Report_Id"));

                    b.Property<string>("Contents")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Report_Id");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("BusTransport.Model.Models.ReportCategory", b =>
                {
                    b.Property<int>("ReportCategory_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportCategory_Id"));

                    b.Property<string>("ReportCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReportCategory_Id");

                    b.ToTable("ReportCategory");
                });

            modelBuilder.Entity("BusTransport.Model.Models.Route", b =>
                {
                    b.Property<int>("Route_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Route_Id"));

                    b.Property<string>("RouteCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Route_Id");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("BusTransport.Model.Models.Seat", b =>
                {
                    b.Property<int>("Seat_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Seat_Id"));

                    b.Property<bool>("isTaken")
                        .HasColumnType("bit");

                    b.HasKey("Seat_Id");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("BusTransport.Model.Models.Ticket", b =>
                {
                    b.Property<int>("Ticket_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ticket_Id"));

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Discount_Id")
                        .HasColumnType("int");

                    b.Property<string>("EndStop")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsVaild")
                        .HasColumnType("bit");

                    b.Property<int>("Passenger_Id")
                        .HasColumnType("int");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int");

                    b.Property<string>("StartStop")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("TicketPrice")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Ticket_Id");

                    b.HasIndex("Discount_Id")
                        .IsUnique();

                    b.HasIndex("Passenger_Id")
                        .IsUnique();

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Ticket_Id = 1,
                            DepartureDate = new DateTime(2024, 1, 14, 12, 15, 27, 387, DateTimeKind.Local).AddTicks(7302),
                            Discount_Id = 1,
                            EndStop = "przystanek 1",
                            IsVaild = true,
                            Passenger_Id = 1,
                            SeatNumber = 12,
                            StartStop = "przystanek 1",
                            TicketPrice = 0m
                        },
                        new
                        {
                            Ticket_Id = 2,
                            DepartureDate = new DateTime(2024, 1, 14, 12, 15, 27, 387, DateTimeKind.Local).AddTicks(7365),
                            Discount_Id = 2,
                            EndStop = "przystanek 1",
                            IsVaild = false,
                            Passenger_Id = 2,
                            SeatNumber = 12,
                            StartStop = "przystanek 1",
                            TicketPrice = 0m
                        });
                });

            modelBuilder.Entity("BusTransport.Model.Models.Ticket", b =>
                {
                    b.HasOne("BusTransport.Model.Models.Discount", "Discount")
                        .WithOne("Ticket")
                        .HasForeignKey("BusTransport.Model.Models.Ticket", "Discount_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusTransport.Model.Models.Passenger", "Passenger")
                        .WithOne("Ticket")
                        .HasForeignKey("BusTransport.Model.Models.Ticket", "Passenger_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discount");

                    b.Navigation("Passenger");
                });

            modelBuilder.Entity("BusTransport.Model.Models.Discount", b =>
                {
                    b.Navigation("Ticket")
                        .IsRequired();
                });

            modelBuilder.Entity("BusTransport.Model.Models.Passenger", b =>
                {
                    b.Navigation("Ticket")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
